version: '3.8'

services:
  # Config setup
  configs1:
    image: mongo:5.0
    container_name: configs1
    command: mongod --configsvr --replSet cfgrs
    volumes:
      - configs1:/data/db
    networks:
      - cluster_subnet

  configs2:
    image: mongo:5.0
    container_name: configs2
    command: mongod --configsvr --replSet cfgrs
    volumes:
      - configs2:/data/db
    networks:
      - cluster_subnet

  configs3:
    image: mongo:5.0
    container_name: configs3
    command: mongod --configsvr --replSet cfgrs
    volumes:
      - configs3:/data/db
    networks:
      - cluster_subnet

  configsetup:
    image: mongo:5.0
    container_name: configsetup
    command: mongo --host configs1:27019 /usr/local/etc/mongo/config-init.js
    depends_on:
      - configs1
      - configs2
      - configs3
    volumes:
      - ./config-init.js:/usr/local/etc/mongo/config-init.js:ro
    networks:
      - cluster_subnet

  # Shard 1 setup
  shard1s1:
    image: mongo:5.0
    container_name: shard1s1
    command: mongod --shardsvr --replSet shard1rs
    volumes:
      - shard1s1:/data/db
    networks:
      - cluster_subnet

  shard1s2:
    image: mongo:5.0
    container_name: shard1s2
    command: mongod --shardsvr --replSet shard1rs
    volumes:
      - shard1s2:/data/db
    networks:
      - cluster_subnet

  shard1s3:
    image: mongo:5.0
    container_name: shard1s3
    command: mongod --shardsvr --replSet shard1rs
    volumes:
      - shard1s3:/data/db
    networks:
      - cluster_subnet

  shard1setup:
    image: mongo:5.0
    container_name: shard1setup
    command: mongo --host shard1s1:27018 /usr/local/etc/mongo/shard-init.js
    depends_on:
      - shard1s1
      - shard1s2
      - shard1s3
    volumes:
      - ./shard1-init.js:/usr/local/etc/mongo/shard-init.js:ro
    networks:
      - cluster_subnet

  # Shard 2 setup
  shard2s1:
    image: mongo:5.0
    container_name: shard2s1
    command: mongod --shardsvr --replSet shard2rs
    volumes:
      - shard2s1:/data/db
    networks:
      - cluster_subnet

  shard2s2:
    image: mongo:5.0
    container_name: shard2s2
    command: mongod --shardsvr --replSet shard2rs
    volumes:
      - shard2s2:/data/db
    networks:
      - cluster_subnet

  shard2s3:
    image: mongo:5.0
    container_name: shard2s3
    command: mongod --shardsvr --replSet shard2rs
    volumes:
      - shard2s3:/data/db
    networks:
      - cluster_subnet

  shard2setup:
    image: mongo:5.0
    container_name: shard2setup
    command: mongo --host shard2s1:27018 /usr/local/etc/mongo/shard-init.js
    depends_on:
      - shard2s1
      - shard2s2
      - shard2s3
    volumes:
      - ./shard2-init.js:/usr/local/etc/mongo/shard-init.js:ro
    networks:
      - cluster_subnet

  # Router setup
  router:
    image: mongo:5.0
    container_name: router
    command: mongos --configdb cfgrs/configs1:27019,configs2:27019,configs3:27019 --bind_ip 0.0.0.0 --port 27017
    depends_on:
      - configsetup
      - shard1setup
      - shard2setup
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - "27017:27017"
    volumes:
      - router:/data/db
    networks:
      - cluster_subnet

  routersetup:
    image: mongo:5.0
    container_name: routersetup
    command: mongo --host router:27017 /usr/local/etc/mongo/router-init.js
    depends_on:
      router:
        condition: service_healthy
    volumes:
      - ./router-init.js:/usr/local/etc/mongo/router-init.js:ro
    networks:
      - cluster_subnet

volumes:
  configs1:
  configs2:
  configs3:
  shard1s1:
  shard1s2:
  shard1s3:
  shard2s1:
  shard2s2:
  shard2s3:
  router:

networks:
  cluster_subnet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.27.17.0/24
